---
services:
  maildev:
    image: docker.io/maildev/maildev
    ports:
      # User interface
      - "1080:1080"
      # SMTP port
      - "25:25"
    networks:
      - "api_postgres-network"
  server:
    container_name: polis-server
    env_file: ../../server/.envrc
    # The following overrides the env_file ...
    environment:
      STATIC_FILES_HOST: file-server
      STATIC_FILES_PORT: 8080
      DATABASE_URL: postgres://postgres:mypwd@postgres_container:5432/polis
      DOMAIN_OVERRIDE: server:8000
    image: polis-server:latest
    build:
      context: ../../server
      dockerfile: ../deploy/docker/server.Dockerfile
    depends_on:
      - "file-server"
    ports:
      - 8000:8000
    networks:
      - "api_postgres-network"
    # Scale the server container to a given number of instances.
    scale: 1
  math:
    container_name: polis-math
    env_file: ../../math/.envrc
    # The following overrides the env_file ...
    environment:
      DATABASE_URL: postgres://postgres:mypwd@postgres_container:5432/polis
    image: polis-math:latest
    build:
      context: ../../math
      dockerfile: ../deploy/docker/math.Dockerfile
    networks:
      - "api_postgres-network"
  file-server:
    container_name: polis-file-server
    image: polis-file-server:latest
    build:
      context: ../../
      dockerfile: ./deploy/docker/file-server.Dockerfile
    ports:
      - 8080:8080
    networks:
      - "api_postgres-network"
  reverse-proxy:
    image: polis-reverse-proxy:latest
    build:
      context: .
      dockerfile: ./reverse-proxy.Dockerfile
    ports:
      - 3000:80
    environment:
      - POLIS_SERVER_HOST=http://server:8000
    depends_on:
      - "server"
    networks:
      - "api_postgres-network"

networks:
  api_postgres-network:
    name: "api_postgres-network"
    external: true

# volumes:
#   backups:
#   postgres:
